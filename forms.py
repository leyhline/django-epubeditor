import random
from collections.abc import Callable

from django.contrib.auth.forms import BaseUserCreationForm  # type: ignore
from django.contrib.auth.models import User
from django.forms import EmailField, FileField, Form, ModelForm

from epubeditor.models import Book

SVG_CALC: dict[str, Callable[[int], str]] = {
    "0": lambda x: f'<path transform="translate({x + 0} -.8419)" d="m20.705 7.0079c-1.577-1.3502-3.4716-3.1157-5.7474-2.3985-3.2493 1.0239-5.3734 3.9838-6.7457 6.9779-2.7042 5.8999-3.4048 12.47-3.8617 18.87-0.20089 2.8143 0.73654 5.5472 2.5096 7.8409 1.3889 1.7967 3.9267 2.893 6.0728 1.7898 3.6414-1.8718 6.2502-5.4347 7.5773-9.24 1.9507-5.5936 2.0595-11.599 2.1887-17.451 0.04691-2.1249 0.762-6.0727-1.3572-6.1424-0.77112-0.025359-2.1391-1.7973-1.4318-1.3681" fill="none" stroke="#000"/>',
    "1": lambda x: f'<path transform="translate({x + 1.2568} -.46302)" d="m4.0647 18.384c5.0719-3.2355 10.219-6.5299 14.379-10.859 0.63778-0.66379 2.3642-3.8705 1.7193-2.9259-1.4354 2.1021-2.5127 4.5271-3.0604 7.0102-0.9983 4.5264-0.23952 9.1689-0.45226 13.758-0.20121 4.3404 0.98597 8.6795 0.58878 13.012-0.02765 0.30168 1.1304 1.9926 0.23749 1.558" fill="none" stroke="#000"/>',
    "2": lambda x: f'<path transform="translate({x - .7276} -1.5875)" d="m5.5462 9.708c0.95286-2.5803 3.8164-3.7527 6.294-4.4358 2.6778-0.73836 6.0009 0.018168 7.3123 2.7334 1.5766 3.264 0.55337 6.9495-0.33348 10.218-1.1773 4.3394-1.8718 9.0377-4.4538 12.753-1.8829 2.7093-4.3972 4.9448-6.1062 7.8414-0.54143 0.91769-4.0569 0.74994-1.9763 0.06181 2.0562-0.68006 3.8588 0.84537 5.7107 1.5241 3.1375 1.1499 6.4741 0.41016 9.5631-1.2662 0.99065-0.53763 1.464-1.4821 1.3512-2.5951" fill="none" stroke="#000"/>',
    "3": lambda x: f'<path transform="translate({x + 1.4032} -.18709)" d="m5.2375 8.8612c0.89852-2.7709 4.0534-3.7076 6.5615-4.5017 2.8077-0.88894 6.4071-0.39928 8.1055 2.2134 1.2812 1.9708 1.7932 4.3202 1.2547 6.6779-0.73016 3.1966-3.022 5.8089-5.9478 7.3866-2.3263 1.2544-5.0447 1.5231-7.4047 2.776-1.1873 0.63034-1.614-0.53434-0.13761-0.38482 3.1613 0.32017 6.3608 0.88754 9.1353 2.5832 2.4436 1.4934 5.175 4.0349 4.7554 6.8907-0.34407 2.3417-2.3873 4.1461-4.3852 5.1827-3.0194 1.5666-7.016 2.0896-9.8331 0.30159-1.7154-1.0887-3.9563-1.5769-4.9321-3.5603" fill="none" stroke="#000"/>',
    "4": lambda x: f'<path transform="translate({x + .28063})" d="m12.573 3.8182c-0.60665 2.7007-1.1989 5.4512-2.6791 7.8567-1.4465 2.3507-2.8646 4.9614-5.2817 6.3674-0.67921 0.39507-1.456 1.0878-0.14351 1.4014 3.059 0.73103 6.2207 0.64478 9.3417 0.74535 2.1359 0.06883 4.3922 0.71102 6.4191 0.02323 0.98592-0.33455 2.21 0.05623 2.4016-0.98656" fill="none" stroke="#000"/><path transform="translate({x + .28063})" d="m17.788 7.4533c-0.75583 2.2981-1.3938 4.6272-1.5962 7.0645-0.59512 7.1655-1.6377 14.375-0.74832 21.567 0.12467 1.008 0.15334 2.0435 0.41775 3.0267" fill="none" stroke="#000"/>',
    "5": lambda x: f'<path transform="translate({x - .28063} -.74835)" d="m6.1744 5.2336c-0.022182 2.9565-0.40373 5.8817-0.92858 8.7936-0.44621 2.4756-1.2973 5.0533-0.69317 7.486 0.24091 0.97015 2.6395 0.38438 3.8531 0.47872 3.3527 0.2606 6.982-0.08931 10.019 1.5239 4.9263 2.617 5.8519 10.723 1.148 14.001-1.9252 1.3418-4.0452 2.5268-6.5023 2.5773-2.7525 0.05663-5.9641-0.61298-7.4958-2.8326-0.60964-0.88345-0.86738-1.9599-1.3268-2.9231" fill="none" stroke="#000"/><path transform="translate({x - .28063} -.74835)" d="m5.5911 5.0825c4.1326 0.93243 8.3924 0.75548 12.599 0.87431 1.8809 0.05313 3.8914 0.067648 5.5548-0.9459" fill="none" stroke="#000"/>',
    "6": lambda x: f'<path transform="translate({x + .74835} .56127)" d="m20.917 5.6871c-2.0404-1.9414-5.7336-2.4226-7.8813-0.65058-2.9926 2.4691-4.8202 6.0757-6.1723 9.6355-1.7097 4.5014-2.8167 9.2836-2.9728 14.106-0.10122 3.1271 1.3564 6.4236 4.2725 7.8259 2.635 1.2671 5.9245 2.5407 8.6822 1.2698 2.568-1.1835 3.9619-3.9072 5.0192-6.3902 0.83059-1.9505 0.16887-4.1093-0.73548-5.8472-1.8235-3.5042-6.3505-5.7855-10.089-4.4891-2.7047 0.93796-4.5452 3.2668-6.6374 5.1142-0.59341 0.52396-1.226 1.0008-1.8345 1.5067" fill="none" stroke="#000"/>',
    "7": lambda x: f'<path transform="translate({x + .28063} .37418)" d="m4.0002 4.6133c3.6657 0.65242 7.3965 0.344 11.099 0.34578 2.2673 0.00109 5.6555-1.8661 6.814 0.097006 0.46915 0.79497-1.3427 2.1626-1.9286 3.1986-3.694 6.5332-5.1963 13.945-7.342 21.055-0.83088 2.7531-3.7544 9.2694-0.9083 8.5751 0.22751-0.05551-0.14091-0.58796-0.16812-0.76224" fill="none" stroke="#000"/><path transform="translate({x + .28063} .37418)" d="m7.0406 20.244c2.778 1.2892 5.9462 1.5251 8.9368 1.1381 0.61829-0.08002 1.2527-0.05767 1.8594-0.19389 0.31862-0.07153 0.42228-0.40909 0.41088-0.69758" fill="none" stroke="#000"/>',
    "8": lambda x: f'<path transform="translate({x + .28063})" d="m19.485 6.6257c-0.6402-1.988-3.166-2.3712-4.9752-2.6874-2.0704-0.36178-4.043 0.68798-5.3507 2.2584-1.9808 2.3786-4.1879 5.4266-3.538 8.6065 0.84555 4.1377 4.4514 6.8172 7.7979 9.1231 2.0607 1.4199 4.5216 2.1999 6.4435 3.8093 2.3823 1.995 2.715 5.5809 1.1943 8.2594-2.2002 3.8753-7.1734 5.3804-11.551 3.984-3.1242-0.99659-5.0352-4.7223-3.7678-7.8153 1.9496-4.7577 6.5213-7.5724 9.6876-11.436 2.5414-3.1013 6.4016-6.7188 5.4249-10.713-0.42811-1.7504-0.24704-3.7558-1.4006-5.2506" fill="none" stroke="#000"/>',
    "9": lambda x: f'<path transform="translate({x + .56127} -.28063)" d="m20.422 6.1545c-2.3109-1.907-5.5731-1.9329-8.3999-1.5638-2.0719 0.27047-4.3689 1.0585-5.2635 3.17-0.9357 2.2086-1.9073 4.9299-0.83686 7.1478 1.4408 2.9852 5.1739 4.0231 8.2676 3.8397 3.1883-0.18903 5.1614-3.2163 6.1668-5.8882 0.88868-2.3615 0.80797-9.9921 0.86128-7.4691 0.08598 4.0697 0.01599 8.1448-0.60542 12.183-0.93075 6.0478-0.073415 12.538-3.0164 18.151-1.0928 2.0842-2.9271 4.0362-5.4712 4.149-2.3365 0.10355-4.7961-0.56785-6.4933-2.0684-1.4398-1.273-1.0932-3.4383-1.1182-5.1543" fill="none" stroke="#000"/>',
    "+": lambda x: f'<path transform="translate({x + 1.1225} -.18709)" d="m13.298 11.54c-1.3975 4.9421-2.3528 10.131-1.8084 15.256 0.17824 1.6781 1.2184 3.4481 0.62405 5.0271-0.06365 0.16908-0.29054 0.06072-0.38889 0.02387" fill="none" stroke="#000"/><path transform="translate({x + 1.1225} -.18709)" d="m3.1693 22.087c4.6632-0.59526 9.4432-1.4101 14.084-0.57754 0.80946 0.14523 1.6636 0.64641 2.466 0.3277 0.15539-0.06172 0.28228-0.1939 0.33143-0.35473" fill="none" stroke="#000"/>',
    "-": lambda x: f'<path transform="translate({x - .093544} -1.8709)" d="m6.3335 23.433c4.149-0.45898 8.3288-0.16365 12.491-0.09503 0.74043 0.01221 1.7579 0.34552 2.2342-0.28678 0.14022-0.18613-0.04449-0.41388-0.05303-0.61248" fill="none" stroke="#000"/>',
    "*": lambda x: f'<path transform="translate({x + .56127})" d="m11.442 21.228c0.06068 0.25381 0.21145 0.55796 0.49954 0.58467 0.33037 0.03062 0.62639-0.1934 0.81977-0.43822 0.17442-0.2208 0.3546-0.5234 0.24515-0.80521-0.09752-0.2511-0.40539-0.29916-0.64659-0.30451-0.21793-0.0048-0.37921 0.14312-0.50126 0.31455-0.14917 0.20951-0.27371 0.43507-0.41661 0.64871z" fill="none" stroke="#000"/>',
    "=": lambda x: f'<path transform="translate({x + -.28063} .93544)" d="m7.0582 17.108c3.4138 0.21028 6.8302-0.07734 10.244-0.17176 0.60775-0.01681 1.3465 0.17829 1.832-0.25258 0.13303-0.11805 0.17765-0.30361 0.15608-0.4745" fill="none" stroke="#000"/><path transform="translate({x - .28063} .93544)" d="m7.6239 25.523c3.4386 0.18389 6.8485-0.30272 10.264-0.62974 0.79915-0.07651 1.6648-0.08266 2.3647-0.52142l0.06312-0.0579" fill="none" stroke="#000"/>',
}


def build_challenge() -> tuple[str, int]:
    num1 = random.randint(0, 99)
    op1 = random.choice(["+", "-", "*"])
    num2 = random.randint(0, 99) if op1 != "*" else random.randint(0, 9)
    op2 = random.choice(["+", "-", "*"])
    num3 = random.randint(0, 99) if op2 != "*" else random.randint(0, 9)
    equation = f"{num1}{op1}{num2}{op2}{num3}"
    solution = eval(equation)
    return equation, solution


def equation_to_svg(equation: str) -> str:
    w = 40
    svg_equ = "".join(SVG_CALC[ch](i * w) for i, ch in enumerate(equation + "="))
    return f'<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="{w * (len(equation) + 1)}" height="{161.8 / 3}">{svg_equ}</svg>'


class UploadBookForm(Form):
    epub = FileField()


class DeleteBookForm(ModelForm):
    class Meta:
        model = Book
        fields = ["uploader", "title"]


class UserCreationForm(BaseUserCreationForm):
    class Meta:
        model = User
        fields = ("username", "email")
        field_classes = {"email": EmailField}
